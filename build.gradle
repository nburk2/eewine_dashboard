buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
        maven { url "https://repo.grails.org/grails/plugins" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.14.1"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
        classpath "org.grails.plugins:views-gradle:1.2.3"
    }
}

version "1.0.0"
group "dashboard"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.grails-gsp"
apply plugin: "org.grails.plugins.views-json"
apply plugin:"asset-pipeline"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
    maven { url "https://repo.grails.org/grails/plugins" }
    maven { url "http://maven.apache.org" }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-datastore-rest-client:5.0.0.RC2"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.3.Final"
    compile "org.hibernate:hibernate-ehcache:5.1.3.Final"
    compile 'org.grails.plugins:spring-security-core:3.1.2'
    compile 'com.bertramlabs.plugins:force-ssl:3.0.3'
    compile "org.grails.plugins:views-json:1.2.3"
    compile "net.authorize:anet-java-sdk:1.9.3"
    compile "com.jameskleeh:excel-builder:0.4.2"
//    compile 'org.grails.plugins:aws-sdk-s3:2.1.5'
    compile 'org.grails.plugins:aws-sdk-s3:2.4.6'
    compile 'com.github.groovy-wslite:groovy-wslite:1.1.2'
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.14.1"
    runtime "mysql:mysql-connector-java:5.1.37"
    runtime "com.h2database:h2"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
}

assets {
    minifyJs = true
    minifyCss = true
    includes = ["fonts/*"]
}

tasks.withType(org.springframework.boot.gradle.run.BootRunTask) {
    if (project.hasProperty('MYSQL_USERNAME')) {
        println "Using Gradle project properties"
        println "username: $MYSQL_USERNAME"
        systemProperty('MYSQL_USERNAME', "$MYSQL_USERNAME")
        systemProperty('MYSQL_PASSWORD', "$MYSQL_PASSWORD")
        systemProperty('MYSQL_EEWINE_URL', "$MYSQL_EEWINE_URL")
        systemProperty('FORCE_SSL', "$FORCE_SSL")
        systemProperty('WEATHER_KEY', "$WEATHER_KEY")
        systemProperty('APILOGINID', "$APILOGINID")
        systemProperty('TRANSACTIONKEY', "$TRANSACTIONKEY")
        systemProperty('GATEWAY_KEY', "$GATEWAY_KEY")
        systemProperty('PORTAL_KEY', "$PORTAL_KEY")
    } else {
        println "Using system environment variables"
    }
}